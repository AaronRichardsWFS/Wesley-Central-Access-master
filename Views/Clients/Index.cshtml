@model PaginatedList<WCAProject.Models.Client>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<div class = "row justify-content-between" style = "margin-bottom:-.35cm;">
  <div class="col-md-4 col-md-offset-1">
    <h1>All Clients</h1>
  </div>
  <div class="mr-5">
    <form class="row justify-content-end" asp-action="Index" method="get">
        <div class="row-md-3 form-actions no-color">
          @{var search = @TempData["SearchBy"];}
          @if(search != null){
            if(search.ToString() == "Name"){
              <select class="form-control" type="text" name="SearchBy">
                  <option value = "" disabled>Search by...</option>
                  <option selected>Name</option><option>Email</option><option>Phone</option>
                  <option>Credible Id</option><option>Client Id</option><option>Contact Relationship</option>
              </select>
            }else if(search.ToString() == "Email"){
              <select class="form-control" type="text" name="SearchBy">
                  <option value = "" disabled>Search by...</option>
                  <option>Name</option><option selected>Email</option><option>Phone</option>
                  <option>Credible Id</option><option>Client Id</option><option>Contact Relationship</option>
              </select>
            }else if(search.ToString() == "Phone"){
              <select class="form-control" type="text" name="SearchBy">
                  <option value = "" disabled>Search by...</option>
                  <option>Name</option><option>Email</option><option selected>Phone</option>
                  <option>Credible Id</option><option>Client Id</option><option>Contact Relationship</option>
              </select>
            }else if(search.ToString() == "Credible Id"){
              <select class="form-control" type="text" name="SearchBy">
                  <option value = "" disabled>Search by...</option>
                  <option>Name</option><option>Email</option><option>Phone</option>
                  <option selected>Credible Id</option><option>Client Id</option><option>Contact Relationship</option>
              </select>
            }else if(search.ToString() == "Client Id"){
              <select class="form-control" type="text" name="SearchBy">
                  <option value = "" disabled>Search by...</option>
                  <option>Name</option><option>Email</option><option>Phone</option>
                  <option>Credible Id</option><option selected>Client Id</option><option>Contact Relationship</option>
              </select>
            }else if(search.ToString() == "Contact Relationship"){
              <select class="form-control" type="text" name="SearchBy">
                  <option value = "" disabled>Search by...</option>
                  <option>Name</option><option>Email</option><option>Phone</option>
                  <option>Credible Id</option><option>Client Id</option><option selected>Contact Relationship</option>
              </select>
            }
          }else{
            <select class="form-control" type="text" name="SearchBy">
                <option value = "" selected disabled>Search by...</option>
                <option>Name</option><option>Email</option><option>Phone</option>
                <option>Credible Id</option><option>Client Id</option><option>Contact Relationship</option>
            </select>
          }
        </div>
        <div class="row-md-3 ml-1" >
            <input class="form-control" type="text" placeholder="Search" name="SearchString" value="@ViewData["currentFilter"]" />
        </div>
    </form>
  </div>
</div>
<hr/>

<table class="table table-striped table-hover">
    <thead class = "thead-dark">
        <tr>
            <th>
                Name
            </th>
            <th>
                CA DB ID
            </th>
            <th>
                Credible ID
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Email
            </th>
            <th>
                Notes/Warnings
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model){
        <tr class="">
            <td class="align-middle">
                <a type="button" class="" asp-action="Edit" asp-route-id="@item.ClientId">@Html.DisplayFor(modelItem => item.name)</a>
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.ClientId)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.CredibleID)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.phone)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.email)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.nextactionnote)
            </td>
            <td class="text-right">
                <!-- <a type="button" class="btn wfs-purple" asp-controller="ClientServices" asp-action="Create" asp-route-clientid="@item.ClientId">New Inquiry</a> -->
                <a asp-action="Details" class="btn wfs-purple" asp-route-id="@item.ClientId">View</a>
                @if ((await AuthorizationService.AuthorizeAsync(User, "WFS_Managers")).Succeeded)
                {
                    <a type="button" class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ClientId">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class = "row justify-content-between">
  <div align = "left" class="col-md-5 col-md-offset-1">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-secondary @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-secondary @nextDisabled">
        Next
    </a>
  </div>

  <div align = "right" class="col-md-5 col-md-offset-1">
      <a type="button" class="btn wfs-green" asp-action="Create">Create New Client</a>
  </div>
</div>
